{"version":3,"file":"component---src-templates-tag-list-jsx-840fa8ac5f5591404399.js","mappings":"qNAMe,SAASA,EAAT,GAA4B,IACrCC,EADoC,EAARC,KACbC,OAAOC,MAK1B,OAJAH,EAAQI,MAAK,SAACC,EAAGC,GACf,OAAOA,EAAEC,WAAaF,EAAEE,cAIxB,gBAAC,IAAD,CAAQC,MAAM,WAAWC,KAAK,OAC5B,uBAAKC,UAAU,kBACb,sCAEA,0BACGV,EAAQW,KAAI,SAAAC,GAAG,OACd,sBAAIC,IAAKD,EAAIE,WAAYJ,UAAU,YACjC,gBAAC,KAAD,CAAMK,GAAE,SAAWC,GAAAA,CAAUJ,EAAIE,YAAzB,KACLF,EAAIE,WADP,IACmB,wBAAMJ,UAAU,SAASE,EAAIL,sB,qBCrB9D,IAuBIS,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,iBAG5CC,EAAOC,QAAUP","sources":["webpack://gatsby-garden/./src/templates/tag-list.jsx","webpack://gatsby-garden/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../layout/layout'\nimport kebabCase from 'lodash/kebabCase'\nimport '../styles/tag-list.css'\n\nexport default function TagList({ data }) {\n  let tagList = data.allMdx.group\n  tagList.sort((a, b) => {\n    return b.totalCount - a.totalCount\n  })\n\n  return (\n    <Layout title=\"All Tags\" type=\"tag\">\n      <div className=\"column is-half\">\n        <h1>All Tags</h1>\n\n        <ul>\n          {tagList.map(tag => (\n            <li key={tag.fieldValue} className=\"tag-name\">\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} <span className=\"badge\">{tag.totalCount}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["TagList","tagList","data","allMdx","group","sort","a","b","totalCount","title","type","className","map","tag","key","fieldValue","to","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}