{
    "componentChunkName": "component---src-templates-note-jsx",
    "path": "/garden-thn-thoi-bc-au",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"backlinks\": [\"Zet/220122 - Asynjur là tên gọi các nữ thần Bắc Âu\", \"Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\", \"Zet/220122 - Người khổng lồ Jotun đầu tiên là Ymir\", \"Zet/220122 - Ba vùng đất thời sơ khai thần thoại Bắc Âu = Niflheim, Muspelheim, Ginnungagap\", \"Zet/220122163112 - Njord là thần biển cả\", \"Zet/220122150230 - Ymir sinh ra những người Jotun\", \"Zet/220123231723 - Ngựa Gulltopp của Heimdall chạy nhanh thứ 10 trong thần thoại Bắc Âu\", \"Zet/220122 - Muspelheim vùng đất của lửa\", \"Zet/220122163845 - Forseti là con của Balder\", \"Zet/220123231823 - Ngựa Sleipnir của Odin chạy nhanh nhất trong thần thoại Bắc Âu\", \"Zet/220122 - Niflheim là vùng đất sương mù băng giá\", \"Zet/220122 - Buri được sinh ra từ một tảng đá\", \"Zet/220122 - Dòng dõi Jotun mang mối thù với Aesir\", \"Zet/220122 - Ba anh em Odin tạo ra loài người\", \"Zet/220122 - Ask và Embla là hai người trần đầu tiên\", \"Zet/220122102617 - Giếng Hvergelmir thuộc Niflheim\", \"Zet/220122103109 - Dòng sông Elivagar khởi nguồn Thế Giới\", \"Zet/220122103002 - Dòng sông Elivagar bắt nguồn từ giếng Hvergelmir\", \"Zet/220125231006 - Ba chủng tộc thần trong thần thoại Bắc Âu là Aesir, Vanir và Jotun\", \"Zet/220125225730 - Các học giả Kito giáo ghi chép lại các câu truyện Thần thoại Bắc Âu\", \"Zet/220125225531 - Thần thoại Bắc Âu chủ yếu lưu truyền bằng miệng\", \"Zet/220122 - Jotun là giống người khổng lồ băng trong thần thoại Bắc Âu\", \"Zet/220122102617 - Giếng Hvergelmir được rồng Nidhug canh giữ\", \"Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\", \"Zet/220122 - Aesir là tên gọi các nam thần Bắc Âu\", \"Zet/220122 - Loài người sống ở Midgard\", \"Zet/220122110002 - Odin, Vili và Ve là con thần Borr và Bestla\", \"Zet/Garden/Thế giới trong thần thoại Bắc Âu có 9 vùng đất\", \"Zet/Garden/Cầu Bifrost\", \"Zet/Garden/Con bò Audhumla\", \"Zet/Garden/Cây Thế Giới Yggdrasil\", \"Zet/Garden/Thần Buri\", \"Zet/Garden/Dòng sông băng Elivagar\", \"Zet/Thinking/❕ 220122113409 - Ba anh em Odin là Đấng sáng tạo trong thần thoại Bắc Âu\"],\n  \"title\": \"Thần thoại Bắc Âu\",\n  \"created\": \"26-Feb-2022\",\n  \"tags\": [\"created/2022/Feb/26\", \"garden\", \"permanent/concept\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-02-26\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nbacklinks:\n  - Zet/220122 - Asynjur là tên gọi các nữ thần Bắc Âu\n  - Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\n  - Zet/220122 - Người khổng lồ Jotun đầu tiên là Ymir\n  - Zet/220122 - Ba vùng đất thời sơ khai thần thoại Bắc Âu = Niflheim, Muspelheim, Ginnungagap\n  - Zet/220122163112 - Njord là thần biển cả\n  - Zet/220122150230 - Ymir sinh ra những người Jotun\n  - Zet/220123231723 - Ngựa Gulltopp của Heimdall chạy nhanh thứ 10 trong thần thoại Bắc Âu\n  - Zet/220122 - Muspelheim vùng đất của lửa\n  - Zet/220122163845 - Forseti là con của Balder\n  - Zet/220123231823 - Ngựa Sleipnir của Odin chạy nhanh nhất trong thần thoại Bắc Âu\n  - Zet/220122 - Niflheim là vùng đất sương mù băng giá\n  - Zet/220122 - Buri được sinh ra từ một tảng đá\n  - Zet/220122 - Dòng dõi Jotun mang mối thù với Aesir\n  - Zet/220122 - Ba anh em Odin tạo ra loài người\n  - Zet/220122 - Ask và Embla là hai người trần đầu tiên\n  - Zet/220122102617 - Giếng Hvergelmir thuộc Niflheim\n  - Zet/220122103109 - Dòng sông Elivagar khởi nguồn Thế Giới\n  - Zet/220122103002 - Dòng sông Elivagar bắt nguồn từ giếng Hvergelmir\n  - Zet/220125231006 - Ba chủng tộc thần trong thần thoại Bắc Âu là Aesir, Vanir và Jotun\n  - Zet/220125225730 - Các học giả Kito giáo ghi chép lại các câu truyện Thần thoại Bắc Âu\n  - Zet/220125225531 - Thần thoại Bắc Âu chủ yếu lưu truyền bằng miệng\n  - Zet/220122 - Jotun là giống người khổng lồ băng trong thần thoại Bắc Âu\n  - Zet/220122102617 - Giếng Hvergelmir được rồng Nidhug canh giữ\n  - Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\n  - Zet/220122 - Aesir là tên gọi các nam thần Bắc Âu\n  - Zet/220122 - Loài người sống ở Midgard\n  - Zet/220122110002 - Odin, Vili và Ve là con thần Borr và Bestla\n  - Zet/Garden/Thế giới trong thần thoại Bắc Âu có 9 vùng đất\n  - Zet/Garden/Cầu Bifrost\n  - Zet/Garden/Con bò Audhumla\n  - Zet/Garden/Cây Thế Giới Yggdrasil\n  - Zet/Garden/Thần Buri\n  - Zet/Garden/Dòng sông băng Elivagar\n  - Zet/Thinking/❕ 220122113409 - Ba anh em Odin là Đấng sáng tạo trong thần thoại Bắc Âu\ntitle: Thần thoại Bắc Âu\ncreated: 26-Feb-2022\ntags:\n  - 'created/2022/Feb/26'\n  - 'garden'\n  - 'permanent/concept'\npublish: True\n---\n\n## Notes:\n\n\n## Ideas & thoughts:\n\n\n\n## Created:\n- __2022-02-26__\n","fields":{"title":"Thần thoại Bắc Âu","date":"2022-05-03T10:42:27.854Z"},"frontmatter":{"tags":["created/2022/Feb/26","garden","permanent/concept"],"source":null}}},"pageContext":{"title":"Thần thoại Bắc Âu","slug":"/garden-thn-thoi-bc-au","refersTo":[],"referredBy":[{"title":"Con bò Audhumla","excerpt":"Notes: [ Thần thoại Bắc Âu ] 220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap Ideas & thoughts: Created: 2022-0…","slug":"/garden-con-bo-audhumla","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\"],\n  \"backlinks\": [\"Zet/220124231810 - Audhumla niếm tảng băng muối để sống\", \"Zet/220122 - Buri được sinh ra từ một tảng đá\", \"Zet/220124231639 - Audhumla nuôi Ymir bằng sữa của mình\", \"Zet/220122 - Những Jotun đầu tiên sống bằng sữa của bò Audhumla\", \"Zet/220124231553 - Bò Audhumla sinh ra từ sương muối\", \"Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\"],\n  \"title\": \"Con bò Audhumla\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Audhumla\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"220122105125 - B\\xF2 Audhumla \\u0111\\u01B0\\u1EE3c sinh ra t\\u1EEB nh\\u1EEFng t\\u1EA3ng b\\u0103ng v\\xF9ng Ginnungagap\")), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"Cây Thế Giới Yggdrasil","excerpt":"Notes: [ Thần thoại Bắc Âu ] 220122 - Cây Yggdrasil lấy nước từ giếng Hvergelmir 220125230547 - Cây Yggdrasil được gọi là Mimameid trong sử…","slug":"/garden-cay-th-gii-yggdrasil","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Cây Yggdrasil lấy nước từ giếng Hvergelmir\", \"Zet/220125230547 - Cây Yggdrasil được gọi là Mimameid trong sử thi Edda thể thơ\"],\n  \"backlinks\": [\"Zet/220125230547 - Cây Yggdrasil được gọi là Mimameid trong sử thi Edda thể thơ\", \"Zet/220125214839 - Rễ cây Yggdrasil nối 9 thế giới\", \"Zet/220125230334 - Cây Yggdrasil mọc ra từ xác Ymir\", \"Zet/220122 - Cây Yggdrasil lấy nước từ giếng Hvergelmir\", \"Zet/220125221537 - Ba rễ của Yggdrasil nối với Hel, Niflheim và Muspelheim\", \"Zet/220125221307 - Thân cây Yggdrasil đâm xuyên qua Midgard\", \"Zet/220125230434 - Trái đất là một cái đĩa nằm trên cây Yggdrasil\", \"Zet/220125221206 - Ba vùng đất Asgard, Alfheim và Vanaheim nằm trên cành cây Yggdrasil\"],\n  \"title\": \"Cây Thế Giới Yggdrasil\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Cây Yggdrasil\", \"Cây Thế Giới\", \"Yggdrasil\", \"Mimameidr\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - C\\xE2y Yggdrasil l\\u1EA5y n\\u01B0\\u1EDBc t\\u1EEB gi\\u1EBFng Hvergelmir\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220125230547 - C\\xE2y Yggdrasil \\u0111\\u01B0\\u1EE3c g\\u1ECDi l\\xE0 Mimameid trong s\\u1EED thi Edda th\\u1EC3 th\\u01A1\"))), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"Cầu Bifost","excerpt":"Notes: [ Thần thoại Bắc Âu ] 220122 - Cầu Bifost nối Midgard và Asgard Ideas & thoughts: Created: 2022-01-22","slug":"/garden-cu-bifrost","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Cầu Bifost nối Midgard và Asgard\"],\n  \"backlinks\": [\"Zet/220122164005 - Heimdall là thần canh giữ cầu Bifost\", \"Zet/220122 - Cầu Bifost nối Midgard và Asgard\", \"Zet/220125230645 - Surt làm gãy cây cầu Biforst trong Ragnarok\", \"Zet/220123231004 - Cầu Bifrost là con đường duy nhất để vào Asgard\"],\n  \"title\": \"Cầu Bifost\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Cầu vồng Bifrost\", \"Bifrost\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - C\\u1EA7u Bifost n\\u1ED1i Midgard v\\xE0 Asgard\"))), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"Dòng sông băng Elivagar","excerpt":"Notes: [ Thần thoại Bắc Âu ] Ideas & thoughts: Created: 2022-01-22","slug":"/garden-dong-song-bng-elivagar","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\"],\n  \"backlinks\": [\"Zet/220122 - Ymir được tạo ra bởi dòng sông Elivagar và dòng dung nham\", \"Zet/220124231008 - 11 dòng sông bắt nguồn từ Hvergelmir được gọi là Elivagar\", \"Zet/220122103109 - Dòng sông Elivagar khởi nguồn Thế Giới\", \"Zet/220122103002 - Dòng sông Elivagar bắt nguồn từ giếng Hvergelmir\"],\n  \"title\": \"Dòng sông băng Elivagar\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Dòng sông Elivagar\", \"Elivagar\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"Thần Buri","excerpt":"Notes: [ Thần thoại Bắc Âu ] 220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri Ideas & thoughts: Created: 2022-01-22","slug":"/garden-thn-buri","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\"],\n  \"backlinks\": [\"Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\", \"Zet/220122 - Bor là con trai Buri\", \"Zet/220122 - Buri được sinh ra từ một tảng đá\"],\n  \"title\": \"Thần Buri\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"220122 - V\\u1ECB th\\u1EA7n \\u0111\\u1EA7u ti\\xEAn th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u l\\xE0 Buri\")), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"Thế giới trong thần thoại Bắc Âu có 9 vùng đất","excerpt":"Notes: Thế giới trong [ Thần thoại Bắc Âu ] có 9 vùng đất, cũng còn được gọi và lãnh địa, thế giới của các tộc người: Vùng đất Niflheim…","slug":"/garden-th-gii-trong-thn-thoi-bc-au-co-9-vung-t","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Niflheim là vùng đất sương mù băng giá\", \"Zet/220122 - Muspelheim vùng đất của lửa\", \"Zet/220122 - Asgard là nhà của các vị thần\", \"Zet/220122 - Vanaheim là vùng đất của Vanir\", \"Zet/220122 - Alfheim là nhà của Light Elf\", \"Zet/220122 - Midgard là vùng đất của người trần\", \"Zet/220122122049 - Nidavelli là vùng đất của người Lùn Dwarf\", \"Zet/220122122429 - Jotunheim là vùng đất của Jotun\", \"Zet/220122122650 - Svartalfheim là vùng đất của người Dark Elf\"],\n  \"title\": \"Thế giới trong thần thoại Bắc Âu có 9 vùng đất\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/linking\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"Th\\u1EBF gi\\u1EDBi trong \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \" c\\xF3 9 v\\xF9ng \\u0111\\u1EA5t, c\\u0169ng c\\xF2n \\u0111\\u01B0\\u1EE3c g\\u1ECDi v\\xE0 l\\xE3nh \\u0111\\u1ECBa, th\\u1EBF gi\\u1EDBi c\\u1EE7a c\\xE1c t\\u1ED9c ng\\u01B0\\u1EDDi:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Niflheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Niflheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t s\\u01B0\\u01A1ng m\\xF9 b\\u0103ng gi\\xE1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Muspelheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Muspelheim v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a l\\u1EEDa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Asgard\"), \" - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Asgard l\\xE0 nh\\xE0 c\\u1EE7a c\\xE1c v\\u1ECB th\\u1EA7n\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Vanaheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Vanaheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a Vanir\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Alfheim\"), \": \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Alfheim l\\xE0 nh\\xE0 c\\u1EE7a Light Elf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Midgard\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Midgard l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi tr\\u1EA7n\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Nidavelli\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122049 - Nidavelli l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi L\\xF9n Dwarf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Jotunheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122429 - Jotunheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a Jotun\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Svartalfheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122650 - Svartalfheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi Dark Elf\"))), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},{"title":"❕ Ba anh em Odin là Đấng sáng tạo trong thần thoại Bắc Âu","excerpt":"Notes: Ba anh em  Thần Odin ,  Thần Ve ,  Thần Vili  là  God  trong [ Thần thoại Bắc Âu ]: 220122 - Ba anh em Odin tạo ra loài người 22012…","slug":"/thinking-220122113409-ba-anh-em-odin-la-ng-sang-to-trong-thn-thoi-bc-au","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/God\", \"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Ba anh em Odin tạo ra loài người\", \"Zet/220122 - Ba anh em Odin dùng xác Ymir xây dựng thế giới\"],\n  \"backlinks\": [\"Zet/220122 - Ba anh em Odin tạo ra loài người\"],\n  \"title\": \"❕ Ba anh em Odin là Đấng sáng tạo trong thần thoại Bắc Âu\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"seeding\", \"permanent/think\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"Ba anh em \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Odin\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Ve\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Vili\"), \" l\\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"God\"), \" trong \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Ba anh em Odin t\\u1EA1o ra lo\\xE0i ng\\u01B0\\u1EDDi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Ba anh em Odin d\\xF9ng x\\xE1c Ymir x\\xE2y d\\u1EF1ng th\\u1EBF gi\\u1EDBi\"))), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}],"linkedNotes":{"con bò audhumla":{"slug":"/garden-con-bo-audhumla","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\"],\n  \"backlinks\": [\"Zet/220124231810 - Audhumla niếm tảng băng muối để sống\", \"Zet/220122 - Buri được sinh ra từ một tảng đá\", \"Zet/220124231639 - Audhumla nuôi Ymir bằng sữa của mình\", \"Zet/220122 - Những Jotun đầu tiên sống bằng sữa của bò Audhumla\", \"Zet/220124231553 - Bò Audhumla sinh ra từ sương muối\", \"Zet/220122105125 - Bò Audhumla được sinh ra từ những tảng băng vùng Ginnungagap\"],\n  \"title\": \"Con bò Audhumla\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Audhumla\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"220122105125 - B\\xF2 Audhumla \\u0111\\u01B0\\u1EE3c sinh ra t\\u1EEB nh\\u1EEFng t\\u1EA3ng b\\u0103ng v\\xF9ng Ginnungagap\")), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"cây thế giới yggdrasil":{"slug":"/garden-cay-th-gii-yggdrasil","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Cây Yggdrasil lấy nước từ giếng Hvergelmir\", \"Zet/220125230547 - Cây Yggdrasil được gọi là Mimameid trong sử thi Edda thể thơ\"],\n  \"backlinks\": [\"Zet/220125230547 - Cây Yggdrasil được gọi là Mimameid trong sử thi Edda thể thơ\", \"Zet/220125214839 - Rễ cây Yggdrasil nối 9 thế giới\", \"Zet/220125230334 - Cây Yggdrasil mọc ra từ xác Ymir\", \"Zet/220122 - Cây Yggdrasil lấy nước từ giếng Hvergelmir\", \"Zet/220125221537 - Ba rễ của Yggdrasil nối với Hel, Niflheim và Muspelheim\", \"Zet/220125221307 - Thân cây Yggdrasil đâm xuyên qua Midgard\", \"Zet/220125230434 - Trái đất là một cái đĩa nằm trên cây Yggdrasil\", \"Zet/220125221206 - Ba vùng đất Asgard, Alfheim và Vanaheim nằm trên cành cây Yggdrasil\"],\n  \"title\": \"Cây Thế Giới Yggdrasil\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Cây Yggdrasil\", \"Cây Thế Giới\", \"Yggdrasil\", \"Mimameidr\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - C\\xE2y Yggdrasil l\\u1EA5y n\\u01B0\\u1EDBc t\\u1EEB gi\\u1EBFng Hvergelmir\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220125230547 - C\\xE2y Yggdrasil \\u0111\\u01B0\\u1EE3c g\\u1ECDi l\\xE0 Mimameid trong s\\u1EED thi Edda th\\u1EC3 th\\u01A1\"))), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"cầu bifost":{"slug":"/garden-cu-bifrost","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Cầu Bifost nối Midgard và Asgard\"],\n  \"backlinks\": [\"Zet/220122164005 - Heimdall là thần canh giữ cầu Bifost\", \"Zet/220122 - Cầu Bifost nối Midgard và Asgard\", \"Zet/220125230645 - Surt làm gãy cây cầu Biforst trong Ragnarok\", \"Zet/220123231004 - Cầu Bifrost là con đường duy nhất để vào Asgard\"],\n  \"title\": \"Cầu Bifost\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Cầu vồng Bifrost\", \"Bifrost\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - C\\u1EA7u Bifost n\\u1ED1i Midgard v\\xE0 Asgard\"))), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"dòng sông băng elivagar":{"slug":"/garden-dong-song-bng-elivagar","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\"],\n  \"backlinks\": [\"Zet/220122 - Ymir được tạo ra bởi dòng sông Elivagar và dòng dung nham\", \"Zet/220124231008 - 11 dòng sông bắt nguồn từ Hvergelmir được gọi là Elivagar\", \"Zet/220122103109 - Dòng sông Elivagar khởi nguồn Thế Giới\", \"Zet/220122103002 - Dòng sông Elivagar bắt nguồn từ giếng Hvergelmir\"],\n  \"title\": \"Dòng sông băng Elivagar\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Dòng sông Elivagar\", \"Elivagar\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"thần buri":{"slug":"/garden-thn-buri","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\"],\n  \"backlinks\": [\"Zet/220122 - Vị thần đầu tiên thần thoại Bắc Âu là Buri\", \"Zet/220122 - Bor là con trai Buri\", \"Zet/220122 - Buri được sinh ra từ một tảng đá\"],\n  \"title\": \"Thần Buri\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/concept\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \"\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"220122 - V\\u1ECB th\\u1EA7n \\u0111\\u1EA7u ti\\xEAn th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u l\\xE0 Buri\")), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"thế giới trong thần thoại bắc âu có 9 vùng đất":{"slug":"/garden-th-gii-trong-thn-thoi-bc-au-co-9-vung-t","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Niflheim là vùng đất sương mù băng giá\", \"Zet/220122 - Muspelheim vùng đất của lửa\", \"Zet/220122 - Asgard là nhà của các vị thần\", \"Zet/220122 - Vanaheim là vùng đất của Vanir\", \"Zet/220122 - Alfheim là nhà của Light Elf\", \"Zet/220122 - Midgard là vùng đất của người trần\", \"Zet/220122122049 - Nidavelli là vùng đất của người Lùn Dwarf\", \"Zet/220122122429 - Jotunheim là vùng đất của Jotun\", \"Zet/220122122650 - Svartalfheim là vùng đất của người Dark Elf\"],\n  \"title\": \"Thế giới trong thần thoại Bắc Âu có 9 vùng đất\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"garden\", \"permanent/linking\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"Th\\u1EBF gi\\u1EDBi trong \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \" c\\xF3 9 v\\xF9ng \\u0111\\u1EA5t, c\\u0169ng c\\xF2n \\u0111\\u01B0\\u1EE3c g\\u1ECDi v\\xE0 l\\xE3nh \\u0111\\u1ECBa, th\\u1EBF gi\\u1EDBi c\\u1EE7a c\\xE1c t\\u1ED9c ng\\u01B0\\u1EDDi:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Niflheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Niflheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t s\\u01B0\\u01A1ng m\\xF9 b\\u0103ng gi\\xE1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Muspelheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Muspelheim v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a l\\u1EEDa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Asgard\"), \" - \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Asgard l\\xE0 nh\\xE0 c\\u1EE7a c\\xE1c v\\u1ECB th\\u1EA7n\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Vanaheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Vanaheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a Vanir\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Alfheim\"), \": \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Alfheim l\\xE0 nh\\xE0 c\\u1EE7a Light Elf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Midgard\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Midgard l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi tr\\u1EA7n\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Nidavelli\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122049 - Nidavelli l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi L\\xF9n Dwarf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Jotunheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122429 - Jotunheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a Jotun\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"V\\xF9ng \\u0111\\u1EA5t Svartalfheim\"), \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122122650 - Svartalfheim l\\xE0 v\\xF9ng \\u0111\\u1EA5t c\\u1EE7a ng\\u01B0\\u1EDDi Dark Elf\"))), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"❕ ba anh em odin là đấng sáng tạo trong thần thoại bắc âu":{"slug":"/thinking-220122113409-ba-anh-em-odin-la-ng-sang-to-trong-thn-thoi-bc-au","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/God\", \"Zet/Garden/Thần thoại Bắc Âu\", \"Zet/220122 - Ba anh em Odin tạo ra loài người\", \"Zet/220122 - Ba anh em Odin dùng xác Ymir xây dựng thế giới\"],\n  \"backlinks\": [\"Zet/220122 - Ba anh em Odin tạo ra loài người\"],\n  \"title\": \"❕ Ba anh em Odin là Đấng sáng tạo trong thần thoại Bắc Âu\",\n  \"created\": \"22-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/22\", \"seeding\", \"permanent/think\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"Ba anh em \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Odin\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Ve\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Th\\u1EA7n Vili\"), \" l\\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"God\"), \" trong \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-bc-au\",\n    \"title\": \"Thần thoại Bắc Âu\"\n  }, \"Th\\u1EA7n tho\\u1EA1i B\\u1EAFc \\xC2u\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Ba anh em Odin t\\u1EA1o ra lo\\xE0i ng\\u01B0\\u1EDDi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"220122 - Ba anh em Odin d\\xF9ng x\\xE1c Ymir x\\xE2y d\\u1EF1ng th\\u1EBF gi\\u1EDBi\"))), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-22\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}}},
    "staticQueryHashes": ["1408915841","342892192"]}