{
    "componentChunkName": "component---src-templates-note-jsx",
    "path": "/garden-n-thn-ishtar",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"outgoing_links\": [\"Zet/Garden/Thần thoại Lưỡng Hà\"],\n  \"backlinks\": [\"Zet/220121 - Ishtar mang hình tượng phụ nữ cầm gươm, một chân dẫm lên sư tử\", \"Zet/220220120000 - Ishtar xin Anu trừng phạt Gilgamesh\", \"Zet/220121 - Ishtar vượt qua 7 cánh cổng địa ngục\", \"Zet/220121 - Anu và Ishtar bảo trợ thành phố Uruk\", \"Zet/220121 - Mục đích Ishtar xuống địa ngục có nhiều phiên bản\", \"Zet/220225202106 - Gilgamesh giết Humbaba giúp dân và giải cứu Ishtar\", \"Zet/220227090650 - Aphrodite có liên hệ với Inanna và Ishtar của Sumer\", \"Zet/220220120157 - Enkidu, Gilgamesh hạ gục bò Gugalanna\", \"Zet/220121 - Enki buộc Ereshkigal hồi sinh Ishtar\", \"Zet/220220120333 - Ishtar yêu cầu các vị thần giết một trong hai Enkidu và Gilgamesh\", \"Zet/220121225501 - Ishtar con gái của Anu\", \"Zet/220220115810 - Gilgamesh khước từ tình cảm của thần Ishtar\", \"Zet/220225202305 - Ishtar phải lòng Gilgamesh\", \"Zet/220121 - Ishtar là nữ thần tình yêu, chiến tranh\"],\n  \"title\": \"Nữ thần Ishtar\",\n  \"created\": \"21-Jan-2022\",\n  \"tags\": [\"created/2022/Jan/21\", \"garden\", \"permanent/concept\"],\n  \"aliases\": [\"Ishtar\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"p\", null, \"N\\u1EEF th\\u1EA7n Ishtar l\\xE0 th\\u1EA7n trong \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"thn-thoi-lng-ha\",\n    \"title\": \"Thần thoại Lưỡng Hà\"\n  }, \"Th\\u1EA7n tho\\u1EA1i L\\u01B0\\u1EE1ng H\\xE0\"), \"\"), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-01-21\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\noutgoing_links:\n  - Zet/Garden/Thần thoại Lưỡng Hà\nbacklinks:\n  - Zet/220121 - Ishtar mang hình tượng phụ nữ cầm gươm, một chân dẫm lên sư tử\n  - Zet/220220120000 - Ishtar xin Anu trừng phạt Gilgamesh\n  - Zet/220121 - Ishtar vượt qua 7 cánh cổng địa ngục\n  - Zet/220121 - Anu và Ishtar bảo trợ thành phố Uruk\n  - Zet/220121 - Mục đích Ishtar xuống địa ngục có nhiều phiên bản\n  - Zet/220225202106 - Gilgamesh giết Humbaba giúp dân và giải cứu Ishtar\n  - Zet/220227090650 - Aphrodite có liên hệ với Inanna và Ishtar của Sumer\n  - Zet/220220120157 - Enkidu, Gilgamesh hạ gục bò Gugalanna\n  - Zet/220121 - Enki buộc Ereshkigal hồi sinh Ishtar\n  - Zet/220220120333 - Ishtar yêu cầu các vị thần giết một trong hai Enkidu và Gilgamesh\n  - Zet/220121225501 - Ishtar con gái của Anu\n  - Zet/220220115810 - Gilgamesh khước từ tình cảm của thần Ishtar\n  - Zet/220225202305 - Ishtar phải lòng Gilgamesh\n  - Zet/220121 - Ishtar là nữ thần tình yêu, chiến tranh\ntitle: Nữ thần Ishtar\ncreated: 21-Jan-2022\ntags:\n  - 'created/2022/Jan/21'\n  - 'garden'\n  - 'permanent/concept'\naliases:\n  - Ishtar\npublish: True\n---\n\n## Notes:\nNữ thần Ishtar là thần trong [[Thần thoại Lưỡng Hà]]\n\n## Ideas & thoughts:\n\n\n\n## Created:\n- __2022-01-21__\n","fields":{"title":"Nữ thần Ishtar","date":"2022-05-03T10:42:27.894Z"},"frontmatter":{"tags":["created/2022/Jan/21","garden","permanent/concept"],"source":null}}},"pageContext":{"title":"Nữ thần Ishtar","slug":"/garden-n-thn-ishtar","refersTo":["Thần thoại Lưỡng Hà"],"referredBy":[],"linkedNotes":{"thần thoại lưỡng hà":{"slug":"/garden-thn-thoi-lng-ha","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"backlinks\": [\"Zet/220121 - Tiamat thần đại dương thần thoại Lưỡng Hà\", \"Zet/220121 - Marduk là thần bão\", \"Zet/220121 - Enlil tách rời trời và đất\", \"Zet/220121 - Ishtar là nữ thần tình yêu, chiến tranh\", \"Zet/Garden/Nữ thần Ishtar\", \"Zet/Garden/Thần Enlil\", \"Zet/Garden/Thần Anu\"],\n  \"title\": \"Thần thoại Lưỡng Hà\",\n  \"created\": \"02-Mar-2022\",\n  \"tags\": [\"created/2022/Mar/02\", \"garden\", \"permanent/concept\"],\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notes:\"), mdx(\"h2\", null, \"Ideas & thoughts:\"), mdx(\"h2\", null, \"Created:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2022-03-02\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}}},
    "staticQueryHashes": ["1408915841","342892192"]}