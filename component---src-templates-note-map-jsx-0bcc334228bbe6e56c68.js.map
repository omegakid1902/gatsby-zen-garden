{"version":3,"file":"component---src-templates-note-map-jsx-0bcc334228bbe6e56c68.js","mappings":"4MAOe,SAASA,EAAT,GAAmC,IAAhBC,EAAe,EAAfA,YAG1BC,EAAQ,CACZC,MAAOC,OAAOC,KAAKJ,EAAYK,aAAaC,KAAI,SAACC,GAC/C,MAAO,CAAEC,GAAID,EAAOE,MAAOF,MAE7BG,MAAO,IAIT,IAAK,IAAIC,KAAaX,EAAYK,YAAa,CAC7C,IAAMO,EAAgBZ,EAAYK,YAAYM,GAE9C,IAAK,IAAIE,KAAKD,EAAe,CAC3B,IAAME,EAAeF,EAAcC,QAGWE,IAA1Cf,EAAYK,YAAYS,IAE1Bb,EAAMS,MAAMM,KAAK,CAAEC,KAAMN,EAAWO,GAAIJ,KAK9C,IAyBMK,EAAS,CACbC,OAAQ,SAASC,GACf,IACMC,EADYD,EAAVnB,MACa,GAAGqB,cAClBC,EAAOxB,EAAYyB,SAASC,MAChC,SAAAC,GAAG,OAAIA,EAAIH,KAAKI,OAAOrB,MAAMgB,gBAAkBD,MAEjDO,EAAAA,EAAAA,IAASL,EAAKA,KAAKI,OAAOE,QAI9B,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,kBACb,6CAEA,wCACe,IACb,gBAAC,KAAD,CAAMb,GAAG,YACP,8BAASf,OAAOC,KAAKJ,EAAYK,aAAa2B,UAIlD,uBAAKxB,GAAG,mBACN,gBAAC,IAAD,CACEP,MAAOA,EACPgC,QAnDM,CACd/B,MAAO,CACLgC,MAAO,MACPC,KAAM,EACNC,KAAM,CACJC,MAAO,QAETA,MAAO,CACLC,OAAQ,OACRC,WAAY,OACZC,UAAW,CACTF,OAAQ,OACRC,WAAY,UAIlB7B,MAAO,CACL2B,MAAO,CACLC,OAAQ,QAEVG,OAAQ,UAEVC,OAAQ,KA8BAvB,OAAQA","sources":["webpack://gatsby-garden/./src/templates/note-map.jsx"],"sourcesContent":["import React from 'react'\nimport { Link, navigate } from 'gatsby'\n// import { Graph } from 'react-d3-graph'\nimport Graph from \"react-graph-vis\"\nimport Layout from '../layout/layout'\nimport '../styles/graph.css'\n\nexport default function NoteMap({ pageContext }) {\n\n    // Create the data for the graph visualisation for the note linking.\n  const graph = {\n    nodes: Object.keys(pageContext.allRefersTo).map((title) => {\n      return { id: title, label: title }\n    }),\n    edges: []\n  }\n\n  // Set up the linkages between the notes.\n  for (let noteTitle in pageContext.allRefersTo) {\n    const refNoteTitles = pageContext.allRefersTo[noteTitle]\n\n    for (let i in refNoteTitles) {\n      const refNoteTitle = refNoteTitles[i]\n\n      // Show links to only the notes that exists. There will be some linking to non existing notes - that will break the graph.\n      if (pageContext.allRefersTo[refNoteTitle] !== undefined) {\n        // graphData.links.push({ source: noteTitle, target: refNoteTitle })\n        graph.edges.push({ from: noteTitle, to: refNoteTitle })\n      }\n    }\n  }\n\n  const options = {\n    nodes: {\n      shape: \"dot\",\n      size: 8,\n      font: {\n        color: \"#999\",\n      },\n      color: {\n        border: \"#aaa\",\n        background: \"#aaa\",\n        highlight: {\n          border: \"#ddd\",\n          background: \"#999\",\n        }\n      }\n    },\n    edges: {\n      color: {\n        border: \"#aaa\"\n      },\n      arrows: \"middle\",\n    },\n    height: 600\n  }\n\n  const events = {\n    select: function(event) {\n      const { nodes } = event\n      const nodeId = nodes[0].toLowerCase();\n      const node = pageContext.allNotes.find(\n        obj => obj.node.fields.title.toLowerCase() === nodeId\n      )\n      navigate(node.node.fields.slug)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"column is-half\">\n        <h1>Knowledge Graph</h1>\n\n        <p>\n          Total Notes:{' '}\n          <Link to=\"/sitemap\">\n            <strong>{Object.keys(pageContext.allRefersTo).length}</strong>\n          </Link>\n        </p>\n\n        <div id=\"graph-container\">\n          <Graph\n            graph={graph}\n            options={options}\n            events={events}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"names":["NoteMap","pageContext","graph","nodes","Object","keys","allRefersTo","map","title","id","label","edges","noteTitle","refNoteTitles","i","refNoteTitle","undefined","push","from","to","events","select","event","nodeId","toLowerCase","node","allNotes","find","obj","fields","navigate","slug","className","length","options","shape","size","font","color","border","background","highlight","arrows","height"],"sourceRoot":""}